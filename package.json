{
  "name": "gate-teamware",
  "version": "2.2.0",
  "description": "A service for collaborative document annotation.",
  "main": "index.js",
  "scripts": {
    "install:docs": "(cd docs && npm install --unsafe-perm) #Install npm packages for documentation",
    "install:frontend": "(cd frontend && npm install --unsafe-perm) #Install npm packages for frontend",
    "postinstall": "npm run install:frontend",
    "migrate": "./manage.py migrate",
    "migrate:integration": "./migrate-integration.sh",
    "dj-collectstatic": "python manage.py collectstatic --noinput --settings='teamware.settings.integration'",
    "docs:create_version": "cd docs && npm run create_version",
    "preserve:docs": "run-s build:apidocs",
    "serve:docs": "cd docs && npm run serve",
    "serve:frontend": "cd frontend && npm run serve",
    "serve:server": "python manage.py runserver",
    "serve:db": "cross-env DJANGO_SETTINGS_MODULE=teamware.settings.base postgres -p 5432 -D pgsql/data",
    "serve:integration": "python manage.py runserver --settings='teamware.settings.integration'",
    "serve:integrationdb": "cross-env DJANGO_SETTINGS_MODULE=teamware.settings.integration postgres -p 5432 -D pgsql/data",
    "serve:cypress": "npx cypress open",
    "serve:frontendintegration": "run-p serve:frontend serve:integration serve:integrationdb",
    "serve:cypressintegration": "run-p serve:frontendintegration serve:cypress",
    "serve": "run-p serve:db serve:frontend serve:server",
    "build:apidocs": "./manage.py build_api_docs docs/docs/developerguide/api_docs.md",
    "prebuild:docs": "run-s build:apidocs",
    "build:docs": "cd docs && npm run build",
    "build:frontend": "cd frontend && npm run build",
    "build:server": "",
    "build": "run-s build:frontend build:server",
    "test:frontend": "cd frontend && npm run test",
    "test:frontend-cov": "cd frontend && npm run test:coverage",
    "test:backend": "run-p serve:db test:pytest",
    "test:pytest": "pytest -v",
    "test:backend-cov": "pytest --cov=backend/ --cov-report=term-missing:skip-covered -v && EXITCODE=$? | tee pytest-coverage.txt && exit $EXITCODE",
    "test:cypress": "cypress run --env TESTENV=dev",
    "test:integration": "run-p --race serve:frontendintegration test:cypress",
    "test:ci_integration": "npm run build && run-p --race serve:integration test:cypress",
    "test": "run-s test:frontend test:backend test:integration"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/GateNLP/gate-teamware.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/GateNLP/gate-teamware/issues"
  },
  "homepage": "https://github.com/GateNLP/gate-teamware",
  "devDependencies": {
    "cross-env": "^7.0.3",
    "cypress-file-upload": "^5.0.8",
    "cypress": "^12.17.4"
  },
  "dependencies": {
    "npm-run-all": "^4.1.5",
    "papaparse": "^5.3.0"
  },
  "optionalDependencies": {}
}