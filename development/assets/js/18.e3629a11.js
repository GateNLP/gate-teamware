(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{416:function(e,t,a){"use strict";a.r(t);var r=a(53),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"managing-releases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#managing-releases"}},[e._v("#")]),e._v(" Managing Releases")]),e._v(" "),a("p",[a("em",[e._v("These instructions are primarily intended for the maintainers of Teamware.")])]),e._v(" "),a("p",[e._v("Note: Releases are always made from the "),a("code",[e._v("master")]),e._v(" branch of the repository.")]),e._v(" "),a("h2",{attrs:{id:"steps-to-making-a-release"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#steps-to-making-a-release"}},[e._v("#")]),e._v(" Steps to making a release")]),e._v(" "),a("ol",[a("li",[a("strong",[e._v("Update the changelog")]),e._v(" - This has to be done manually, go through any pull requests to "),a("code",[e._v("dev")]),e._v(" since the last release.\n"),a("ul",[a("li",[e._v("In github pull requests page, use the search term "),a("code",[e._v("is:pr merged:>=yyyy-mm-dd")]),e._v(" to find all merged PR from the date since the last version change.")]),e._v(" "),a("li",[e._v("Include the changes in the "),a("code",[e._v("CHANGELOG.md")]),e._v(" file; the changelog section "),a("em",[e._v("MUST")]),e._v(" begin with a level-two heading that starts with the relevant version number in square brackets ("),a("code",[e._v("## [N.M.P] Optional descriptive suffix")]),e._v(") as the GitHub workflow that creates a release from the eventual tag depends on this pattern to find the right release notes.  Each main item within the changelog should have a link to the originating PR e.g. [#123](https://github.com/GateNLP/gate-teamware/pull/123).")]),e._v(" "),a("li",[e._v("Also add to release notes later.")])])]),e._v(" "),a("li",[a("strong",[e._v("Update and check the version numbers")]),e._v(" - from the teamware directory run "),a("code",[e._v("python version.py check")]),e._v(" to check whether all version numbers are up to date. If not, update the master "),a("code",[e._v("VERSION")]),e._v(" file and run "),a("code",[e._v("python version.py update")]),e._v(" to update all other version numbers and commit the result. Note that "),a("code",[e._v("version.py")]),e._v(" requires "),a("code",[e._v("pyyaml")]),e._v(" for reading "),a("code",[e._v("CITATION.cff")]),e._v(", "),a("code",[e._v("pyyaml")]),e._v(" is included in Teamware's dependencies.")]),e._v(" "),a("li",[a("strong",[e._v("Create a version of the documentation")]),e._v(" - Run "),a("code",[e._v("npm run docs:create_version")]),e._v(", this will archive the current version of the documentation using the version number in "),a("code",[e._v("package.json")]),e._v(".")]),e._v(" "),a("li",[a("strong",[e._v("Create a pull request from "),a("code",[e._v("dev")]),e._v(" to "),a("code",[e._v("master")])]),e._v(" including any changes to "),a("code",[e._v("CHANGELOG.md")]),e._v(", "),a("code",[e._v("VERSION")]),e._v(".")]),e._v(" "),a("li",[a("strong",[e._v("Create a tag")]),e._v(" - Once the dev-to-master pull request has been merged, create a tag from the resulting "),a("code",[e._v("master")]),e._v(" branch named "),a("code",[e._v("vN.M.P")]),e._v(" (i.e. the new version number prefixed with the letter "),a("code",[e._v("v")]),e._v(").  This will trigger two GitHub workflows:\n"),a("ul",[a("li",[e._v("one that builds versioned Docker images for this release and pushes them to "),a("code",[e._v("ghcr.io")]),e._v(", updating the "),a("code",[e._v("latest")]),e._v(" image tag to point to the new release")]),e._v(" "),a("li",[e._v('one that creates a "release" on GitHub with the necessary artifacts to make the '),a("code",[e._v("https://gate.ac.uk/get-teamware.sh")]),e._v(" installation mechanism work correctly.  The release notes for this release will be generated by extracting the matching section from "),a("code",[e._v("CHANGELOG.md")]),e._v(".")])])]),e._v(" "),a("li",[a("strong",[e._v("Update the Helm chart")]),e._v(" - Create a new branch on https://github.com/GateNLP/charts to update the "),a("code",[e._v("appVersion")]),e._v(" of the "),a("code",[e._v("gate-teamware")]),e._v(" Helm chart to match the version that was just created by the tag workflow.  You must also update the chart "),a("code",[e._v("version")]),e._v(", bumping the major version number if the new chart is not backwards-compatible with the old.  Submit a pull request to the "),a("code",[e._v("main")]),e._v(" branch, which will publish the new chart when it is merged.")])])])}),[],!1,null,null,null);t.default=o.exports}}]);