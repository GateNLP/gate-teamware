(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{413:function(e,t,a){"use strict";a.r(t);var r=a(53),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"managing-releases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#managing-releases"}},[e._v("#")]),e._v(" Managing Releases")]),e._v(" "),a("p",[a("em",[e._v("These instructions are primarily intended for the maintainers of Teamware.")])]),e._v(" "),a("p",[e._v("Note: Releases are always made from the "),a("code",[e._v("master")]),e._v(" branch of the repository.")]),e._v(" "),a("h2",{attrs:{id:"steps-to-making-a-release"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#steps-to-making-a-release"}},[e._v("#")]),e._v(" Steps to making a release")]),e._v(" "),a("ol",[a("li",[a("strong",[e._v("Update the changelog")]),e._v(" - This has to be done manually, go through any pull requests to "),a("code",[e._v("dev")]),e._v(" since the last release.\n"),a("ul",[a("li",[e._v("In github pull requests page, use the search term "),a("code",[e._v("is:pr merged:>=yyyy-mm-dd")]),e._v(" to find all merged PR from the date since the last version change.")]),e._v(" "),a("li",[e._v("Include the changes in the "),a("code",[e._v("CHANGELOG.md")]),e._v(" file, each main item should have a link to the originating PR e.g. [#123](https://github.com/GateNLP/gate-teamware/pull/123).")]),e._v(" "),a("li",[e._v("Also add to release notes later.")])])]),e._v(" "),a("li",[a("strong",[e._v("Update and check the version numbers")]),e._v(" - from the teamware directory run "),a("code",[e._v("python version.py check")]),e._v(" to check whether all version numbers are up to date. If not, update the master "),a("code",[e._v("VERSION")]),e._v(" file and run "),a("code",[e._v("python version.py update")]),e._v(" to update all other version numbers and commit the result. Note that "),a("code",[e._v("version.py")]),e._v(" requires "),a("code",[e._v("pyyaml")]),e._v(" for reading "),a("code",[e._v("CITATION.cff")]),e._v(", "),a("code",[e._v("pyyaml")]),e._v(" is included in Teamware's dependencies.")]),e._v(" "),a("li",[a("strong",[e._v("Create a version of the documentation")]),e._v(" - Run "),a("code",[e._v("npm run docs:create_version")]),e._v(", this will archive the current version of the documentation using the version number in "),a("code",[e._v("package.json")]),e._v(".")]),e._v(" "),a("li",[a("strong",[e._v("Create a pull request from "),a("code",[e._v("dev")]),e._v(" to "),a("code",[e._v("master")])]),e._v(" including any changes to "),a("code",[e._v("CHANGELOG.md")]),e._v(", "),a("code",[e._v("VERSION")]),e._v(".")]),e._v(" "),a("li",[a("strong",[e._v("Creating a release")]),e._v(" - Create a release via the GitHub interface, the relevant commit can be tagged at this stage or prior to creating the release.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);