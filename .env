# Database details
PG_SUPERUSER_PASSWORD= # default: auto-generated
DJANGO_DB_NAME=annotations_db
DB_USERNAME=gate
DB_PASSWORD= # default: auto-generated

# Django settings
DJANGO_SETTINGS_MODULE=teamware.settings.deployment
DJANGO_SECRET_KEY= # default: auto-generated


# Database backup user credentials
DB_BACKUP_USER=backup
DB_BACKUP_PASSWORD= # default: auto-generated

# Path to backup location
BACKUPS_VOLUME=

# User permissions for the backup user on the host filesystem (user:group)
BACKUPS_USER_GROUP=

# Set automatically as production, staging or development based on branch (master, dev, other)
DEPLOY_ENV=

#
# If you are pushing images to a remote registry, set the registry names here
# *including* the trailing slash
#
IMAGE_REGISTRY=ghcr.io/gatenlp/
MAIN_IMAGE=teamware-backend-dev # Do not change
STATIC_IMAGE=teamware-static-dev # Do not change
IMAGE_TAG=latest

#
# Email sending configuration
#
# For SMTP backend: django.core.mail.backends.smtp.EmailBackend
# For Gmail API backend:  gmailapi_backend.mail.GmailBackend
DJANGO_EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend

# Settings for SMTP email
DJANGO_EMAIL_HOST=smtp.example.com
DJANGO_EMAIL_PORT=587
DJANGO_EMAIL_HOST_USER=username
DJANGO_EMAIL_HOST_PASSWORD=password

# If the mail server requires an encrypted connection, we must specify what
# kind. Options are tls (= STARTTLS on port 25 or 587) or ssl (= "SMTPS", i.e.
# implicit TLS on connect, usually on port 465)
DJANGO_EMAIL_SECURITY=tls

# If the server requires you to identify yourself with a client certificate,
# specify it as follows:
# 
# DJANGO_EMAIL_CLIENT_KEY=/path/to/private.key
# DJANGO_EMAIL_CLIENT_CERTIFICATE=/path/to/certificate.pem
#
#
# Settings for Gmail API
DJANGO_GMAIL_API_CLIENT_ID=google_assigned_id
DJANGO_GMAIL_API_CLIENT_SECRET=google_assigned_secret
DJANGO_GMAIL_API_REFRESH_TOKEN=google_assigned_token


### DO NOT EDIT THIS COMMENT
### generate-docker-env.sh will not touch anything below this line
