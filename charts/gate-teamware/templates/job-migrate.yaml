{{- if .Values.migrations.run }}
{{- with .Values.backend }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "gate-teamware.fullname" $ }}-migrate-{{ $.Release.Revision }}
  labels:
    {{- include "gate-teamware.labels" $ | nindent 4 }}
    {{- include "gate-teamware.selectorLabels" $ | nindent 4 }}
    app.kubernetes.io/component: migrations
spec:
  {{- with $.Values.migrations.ttl }}
  ttlSecondsAfterFinished: {{ . }}
  {{- end }}
  template:
    spec:
      {{- with .imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gate-teamware.serviceAccountName" $ }}
      securityContext:
        {{- toYaml .podSecurityContext | nindent 8 }}
      restartPolicy: Never
      {{- with $.Values.migrations.waitFor }}
      initContainers:
      - name: wait-for
        image: {{ print .registry .image ":" .tag | quote }}
        env:
        - name: POSTGRES_HOST
          value: {{ printf "%s:%s" (include "postgresql.primary.fullname" $.Subcharts.postgresql) (include "postgresql.service.port" $.Subcharts.postgresql) | quote }}
        command:
          - /wait-for
        args:
          - --host="$(POSTGRES_HOST)"
          - --timeout={{ .timeout }}
      {{- end }}
      containers:
        - name: {{ $.Chart.Name }}
          securityContext:
            {{- toYaml .securityContext | nindent 12 }}
          image: "{{ $.Values.imageRegistry }}{{ .image.repository }}:{{ .image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          env:
          - name: DJANGO_SETTINGS_MODULE
            value: teamware.settings.deployment
          - name: DJANGO_ALLOWED_HOSTS
            value: {{ $.Values.hostName | quote }}
          # Only run migrations, nothing else
          - name: TEAMWARE_ONLY_SETUP
            value: "true"
          - name: DJANGO_DB_NAME
            value: {{ $.Values.postgresql.auth.database | quote }}
          - name: DB_HOST
            value: {{ include "postgresql.primary.fullname" $.Subcharts.postgresql | quote }}
          - name: DB_PORT
            value: {{ include "postgresql.service.port" $.Subcharts.postgresql | quote }}
          - name: DB_USERNAME
            value: {{ $.Values.postgresql.auth.username | quote }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "postgresql.secretName" $.Subcharts.postgresql }}
                key: password
          - name: DJANGO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .djangoSecret | required "backend.djangoSecret must be set to the name of an existing secret with an entry 'secret-key' and a value consisting of 40+ random printable characters" }}
                key: secret-key
          {{- with $.Values.superuser }}
          - name: SUPERUSER_EMAIL
            value: {{ .email | quote }}
          - name: SUPERUSER_USERNAME
            value: {{ .username | quote }}
          - name: SUPERUSER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "gate-teamware.superuserSecret" $ | quote }}
                key: password
          {{- end }}
          resources:
            {{- toYaml .resources | nindent 12 }}
      {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}
