# Generated by Django 3.2.8 on 2022-03-11 15:22

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0015_testdocument_trainingdocument'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='serviceuser',
            name='annotates',
        ),
        migrations.AddField(
            model_name='project',
            name='annotator_max_test_score',
            field=models.FloatField(null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='annotator_max_train_score',
            field=models.FloatField(null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='can_annotate_after_passing_test',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='project',
            name='has_test_stage',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='project',
            name='has_training_stage',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='project',
            name='min_test_pass_threshold',
            field=models.FloatField(default=1.0, null=True),
        ),
        migrations.CreateModel(
            name='AnnotatorProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_score', models.FloatField(null=True)),
                ('test_score', models.FloatField(null=True)),
                ('training_completed', models.DateTimeField(null=True)),
                ('test_completed', models.DateTimeField(null=True)),
                ('annotations_completed', models.DateTimeField(null=True)),
                ('annotator', models.ManyToManyField(related_name='annotators', to=settings.AUTH_USER_MODEL)),
                ('project', models.ManyToManyField(related_name='projects', to='backend.Project')),
            ],
        ),
    ]
